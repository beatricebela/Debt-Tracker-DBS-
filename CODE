CREATE DATABASE practice

CREATE TABLE customers (
customer_id INT PRIMARY KEY,
last_name VARCHAR,
first_name VARCHAR,
address VARCHAR,
email VARCHAR,
contact_number VARCHAR(11)
);

INSERT INTO customers (customer_id, last_name, first_name, address, email, contact_number)
VALUES (01, 'Robles', 'Jhoanna Christine', 'Calamba, Laguna', 'jcrobles@gmail.com', '09568880127'),
(02, 'Arceta', 'Maraiah Queen', 'Lapu-lapu City, Cebu', 'mqarceta@gmail.com', '09568880126'),
(03, 'Vergara', 'Ma. Nicolette','Tagbilaran, Bohol', 'mnvergara@gmail.com', '09568880914'),
(04, 'Ricalde', 'Mary Loi Yves', 'General Trias City, Cavite', 'mlyricalde@gmail.com', '09568880527' ),
(05, 'Apuli', 'Gweneth', 'Daraga, Albay', 'gapuli@gmail.com', '09568880619'),
(06, 'Sevilleja', 'Lindstey Stacey Aubrey', 'Bagbag, Nueva Vizcaya', 'lsasevilleja@gmail.com', '09568880713'),
 (07, 'Lim', 'Mikhaela Janna', 'San Juan City', 'mjlim@gmail.com', '09568880808'),
 (08, 'Catacutan', 'Sheena Mae', 'Santiago City, Isabela', 'smcatacutan@gmail.com', '09568880509');

CREATE TABLE loans (
loan_number INT,
id INT, 
amount INT, 
interest_rate VARCHAR,
monthly_payment DECIMAL(10,2),
months_left_to_maturity INT
);

ALTER TABLE loans 
ADD CONSTRAINT fk_id
FOREIGN KEY (id) REFERENCES customers(customer_id);

INSERT INTO loans (loan_number, id, amount, interest_rate, monthly_payment, months_left_to_maturity)
VALUES (1, 3, 25000, '2%', 1063.51, 0),
		(2, 4, 25000, '3%', 553.36, 36),
		(3, 1, 30000, '2%', 650.85, 40),
		(4, 2, 15000, '2%', 1263.58, 11),
		(5, 3, 20000, '2.5%', 855.21, 23),
 		(6, 7, 12000, '4%', 521.10, 24),
		 (7, 6, 35000, '3%', 1017.84, 36),
		 (8, 5, 28000, '3%', 969.94, 30),
		 (9, 8, 24000, '1%', 4011.67, 6);

create table loans (
loan_number INT,
status VARCHAR);

INSERT INTO status (loan_number, status)
VALUES (1, 'FULLY PAID'),
		(2, 'PAID'),
		(3, 'UNPAID'),
		(4, 'UNPAID'),
		(5, 'PAID'),
		(6, 'NEW'),
		(7, 'NEW'),
		(8, 'NEW'),
		(9, 'NEW');

ALTER TAB;E loans
ADD PRIMARY KEY (loan_number);

ALTER TABLE status
ADD CONSTRAINT fk_loan_number
FOREIGN KEY (loan_number)
REFERENCES loans (loan_number);

QUERY LOANS THAT ARE UNPAID
SELECT status.loan_number, loans.id, status.status
FROM loans
JOIN status ON loans.loan_number = status.loan_number
WHERE status = 'UNPAID'; 

QUERY LOANS THAT ARE PAID 
SELECT status.loan_number, loans.id, status.status
FROM loans
JOIN status ON loans.loan_number = status.loan_number
WHERE status = 'PAID'; 

QUERY LOANS THAT ARE FULLY PAID
SELECT status.loan_number, loans.id, status.status
FROM loans
JOIN status ON loans.loan_number = status.loan_number
WHERE status = 'FULLY PAID'; 

QUERY LOANS THAT ARE NEW
SELECT status.loan_number, loans.id, status.status
FROM loans
JOIN status ON loans.loan_number = status.loan_number
WHERE status = 'NEW'; 
